{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/taylorpasquariello/learning_resources/paseon/paseon/utils/auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport { compose } from 'redux'; // import { login_action } from '../redux/actions/auth'\n\nimport { useDispatch } from 'react-redux';\nimport getUrl from './getUrl';\nexport const login = ({\n  token\n}) => {\n  cookie.set('token', token, {\n    expires: 36000\n  });\n  Router.push('/dashboard');\n};\nexport const getUserData = async ctx => {\n  const {\n    userId\n  } = nextCookie(ctx);\n  let url = `${getUrl}/account/get_acct_details`;\n\n  try {\n    await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify({\n        id: userId\n      })\n    }).then(async function (response) {\n      if (response.status !== 200) {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n\n      await response.json().then(function (data) {\n        const {\n          dispatch\n        } = ctx.reduxStore;\n        dispatch({\n          type: 'USER_LOADED',\n          payload: data\n        });\n      });\n    });\n  } catch (error) {\n    console.error('You have an error in your code or there are Network issues.', error);\n    const {\n      response\n    } = error;\n  }\n};\nexport const auth = async ctx => {\n  const {\n    token,\n    userId\n  } = nextCookie(ctx);\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/login'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/login');\n  }\n\n  return userId;\n};\nexport const logout = () => {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  Router.push('/login');\n};\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/login');\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout);\n      return () => {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps, {\n      token\n    });\n  };\n\n  return Wrapper;\n};","map":{"version":3,"sources":["/Users/taylorpasquariello/learning_resources/paseon/paseon/utils/auth.js"],"names":["useEffect","Router","nextCookie","cookie","compose","useDispatch","getUrl","login","token","set","expires","push","getUserData","ctx","userId","url","fetch","method","headers","body","id","then","response","status","error","Error","statusText","json","data","dispatch","reduxStore","type","payload","console","auth","req","res","writeHead","Location","end","logout","remove","window","localStorage","setItem","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","key","log","addEventListener","removeEventListener","removeItem","getInitialProps","componentProps"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport cookie from 'js-cookie'\nimport { compose } from 'redux'\n// import { login_action } from '../redux/actions/auth'\nimport { useDispatch } from 'react-redux'\nimport getUrl from './getUrl';\n\n\nexport const login = ({ token }) => {\n\n  cookie.set('token', token, { expires: 36000 })\n\n  Router.push('/dashboard')\n}\n\n\nexport const getUserData  = async (ctx) =>  {\n\n  const { userId } = nextCookie(ctx)\n  let url = `${getUrl}/account/get_acct_details`\n  \n  try {\n\n    await fetch(url, {\n      \n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({id: userId})\n      \n    }).then(\n      async function(response) {\n        if (response.status !== 200) {\n            let error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n\n        await response.json().then(function(data){\n          const { dispatch } = ctx.reduxStore;\n\n          dispatch({\n            type: 'USER_LOADED',\n            payload: data\n          });\n        })\n      }\n    )\n    \n  } catch (error) {\n    console.error('You have an error in your code or there are Network issues.',error)\n\n    const { response } = error\n   \n  }\n}\n\n\n\n\n\nexport const auth = async ctx => {\n  const { token, userId } = nextCookie(ctx)\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, { Location: '/login' })\n    ctx.res.end()\n  }\n\n  // We already checked for server. This should only happen on client.\n  if (!token) {\n    Router.push('/login')\n  }\n\n  return userId;\n}\n\nexport const logout = () => {\n  cookie.remove('token')\n  // to support logging out from all windows\n  window.localStorage.setItem('logout', Date.now())\n  Router.push('/login')\n}\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!')\n        Router.push('/login')\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout)\n\n      return () => {\n        window.removeEventListener('storage', syncLogout)\n        window.localStorage.removeItem('logout')\n      }\n    }, [null])\n\n    return <WrappedComponent {...props} />\n  }\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx)\n\n    const componentProps =\n      WrappedComponent.getInitialProps &&\n      (await WrappedComponent.getInitialProps(ctx))\n\n    return { ...componentProps, token }\n  }\n\n  return Wrapper\n}"]},"metadata":{},"sourceType":"module"}