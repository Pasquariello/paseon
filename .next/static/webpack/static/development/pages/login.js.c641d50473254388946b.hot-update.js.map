{"version":3,"file":"static/webpack/static/development/pages/login.js.c641d50473254388946b.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { useState } from 'react'\n// import fetch from 'isomorphic-unfetch'\nimport Link from 'next/link'\nimport Layout from '../components/MyLayout'\n// import { login } from '../utils/auth'\n//  const db = require('./api/db/Postgres').db();\n\n\n\n// Login.getInitialProps = async ({ req, query }) => {\n//   const protocol = req\n//     ? `${req.headers['x-forwarded-proto']}:`\n//     : location.protocol\n//   const host = req ? req.headers['x-forwarded-host'] : location.host\n//   const pageRequest = `${protocol}//${host}/api/loginv2`\n//   const res = await fetch(url)\n//   const json = await res\n//   return json\n\n  \n// }\n\nfunction Login () {\n\n\n  const [userData, setUserData] = useState({ username: '', error: '' })\n\n  async function handleSubmit (event) {\n    \n    event.preventDefault()\n    setUserData(Object.assign({}, userData, { error: '' }))\n\n    const username = userData.username\n    let url = 'http://localhost:3001/emailService/login'\n\n    fetch(url, {\n        headers: {\n            'Content-Type':'application/json',\n            'Access-Control-Allow-Origin': '*',\n            },\n          method: 'POST',\n          body: JSON.stringify(username),\n        })\n        .then(response => {\n            if (response.status === 200) {\n                this.loading = false;\n                this.msgSuccess = true;\n                let self = this;\n                setTimeout(function(){ \n                    console.log('YOYOYO ')\n                    self.msgSuccess = false; \n                }, 2000);            } \n            else {\n                console.log('error')\n            }\n           // return response.json();\n        })\n        .then(response => {\n      \n            \n        });\n\n    // try {\n    //   // let user = await db('users').select('email').where({email: 'taylor@pasq.net'});\n\n    //   const response = await fetch(url, {\n        \n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({ username })\n    //   })\n    //   console.log('response', response)\n    //   if (response.status === 200) {\n\n    //     // const { token } = await response.json()\n    //     // await login({ token })\n    //   } else {\n    //     console.log('Login failed.')\n    //     // https://github.com/developit/unfetch#caveats\n    //     let error = new Error(response.statusText)\n    //     error.response = response\n    //     throw error\n    //   }\n    // } catch (error) {\n    //   console.error(\n    //     'You have an error in your code or there are Network issues.',\n    //     error\n    //   )\n\n    //   const { response } = error\n    //   setUserData(\n    //     Object.assign({}, userData, {\n    //       error: response ? response.statusText : error.message\n    //     })\n    //   )\n    // }\n  }\n\n  return (\n    <Layout>\n      <div className='login'>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor='username'>GitHub username</label>\n\n          <input\n            type='text'\n            id='username'\n            name='username'\n            value={userData.username}\n            onChange={event =>\n              setUserData(\n                Object.assign({}, userData, { username: event.target.value })\n              )\n            }\n          />\n\n          <button type='submit'>Login</button>\n\n          {userData.error && <p className='error'>Error: {userData.error}</p>}\n        </form>\n      </div>\n      <style jsx>{`\n        .login {\n          max-width: 340px;\n          margin: 0 auto;\n          padding: 1rem;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n        }\n        form {\n          display: flex;\n          flex-flow: column;\n        }\n        label {\n          font-weight: 600;\n        }\n        input {\n          padding: 8px;\n          margin: 0.3rem 0 1rem;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n        }\n        .error {\n          margin: 0.5rem 0 0;\n          color: brown;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nexport default Login\n\n\n\n// function ProfilePage({ profile }) {\n//   return (\n//     <>\n//       <div>\n//         <img src={profile.avatar} />\n//         <h1>{profile.name}</h1>\n//         <p>{profile.address}</p>\n//         <p>{profile.email}</p>\n//         <Link href=\"/\">\n//           <a>‚Üê Back to profiles</a>\n//         </Link>\n//       </div>\n//     </>\n//   )\n// }\n\n// export default ProfilePage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AACA;AA2EA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AAkDA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}