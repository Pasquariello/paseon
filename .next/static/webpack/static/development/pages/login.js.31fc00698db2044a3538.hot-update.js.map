{"version":3,"file":"static/webpack/static/development/pages/login.js.31fc00698db2044a3538.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { useState } from 'react'\n// import fetch from 'isomorphic-unfetch'\nimport Link from 'next/link'\nimport Layout from '../components/MyLayout'\n import { login } from '../utils/auth'\n\nimport { useDispatch } from 'react-redux'\nimport { withRedux } from '../lib/redux'\n// import { login } from '../redux/actions/auth'\nimport Router from 'next/router'\n\n\n\n\n\n\n\nfunction Login () {\n  const dispatch = useDispatch()\n\n\n  const [userData, setUserData] = useState({ username: '', password: '', error: '' })\n\n\n  async function handleSubmit (event) {\n    \n    event.preventDefault()\n    setUserData(Object.assign({}, userData, { error: '' }))\n    const username = userData.username\n\n    //let url = 'https://paseonforms.com/login/auth'\n         let url = `${getUrl}/login/auth`    \n  \n\n    try {\n\n      const response = await fetch(url, {\n        \n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(userData)\n        \n      }).then(\n        function(response) {\n          if (response.status !== 200) {\n            console.log('Login failed.')\n              let error = new Error(response.statusText)\n              error.response = response\n              throw error\n          }\n\n          response.json().then(function(data){\n\n            dispatch({\n              type: 'LOGIN_SUCCESS',\n              payload: data\n            });\n\n\n            Router.push('/dashboard')\n\n          })\n        }\n      )\n    } catch (error) {\n      console.error(\n        'You have an error in your code or there are Network issues.',\n        error\n      )\n\n      const { response } = error\n      setUserData(\n        Object.assign({}, userData, {\n          error: response ? response.statusText : error.message\n        })\n      )\n    }\n  }\n\n  return (\n    <Layout>\n      \n      <div className='login' style={{overflow: 'auto'}}>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor='username'>Username / Email</label>\n\n          <input\n            type='text'\n            id='username'\n            name='username'\n            value={userData.username}\n            onChange={event =>\n              setUserData(\n                Object.assign({}, userData, { username: event.target.value })\n              )\n            }\n          />\n\n<label htmlFor='username'>Password</label>\n\n<input\n  type='password'\n  id='password'\n  name='password'\n  value={userData.password}\n  onChange={event =>\n    setUserData(\n      Object.assign({}, userData, { password: event.target.value })\n    )\n  }\n/>\n\n          <button type='submit'>Login</button>\n\n          {userData.error && <p className='error'>Error: {userData.error}</p>}\n        </form>\n          \n        <div style={{float: 'left'}}>\n        <Link href=\"/register\">\n          <a>Register</a>\n        </Link>\n        </div>\n\n        <div style={{float: 'right'}}>\n        <Link href=\"/reset/forgotPassword\">\n          <a>Forgot Password</a>\n        </Link>\n        </div>\n        {/* <div style={{clear: 'both'}}></div> */}\n\n\n      </div>\n      <style jsx>{`\n        .login {\n          max-width: 340px;\n          margin: 0 auto;\n          padding: 1rem;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n        }\n        form {\n          display: flex;\n          flex-flow: column;\n        }\n        label {\n          font-weight: 600;\n        }\n        input {\n          padding: 8px;\n          margin: 0.3rem 0 1rem;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n        }\n        .error {\n          margin: 0.5rem 0 0;\n          color: brown;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nLogin.getInitialProps = ({ reduxStore }) => {\n  console.log('reduxStore',reduxStore)\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  // const { dispatch } = reduxStore\n  // dispatch({\n  //   type: 'LOGIN',\n  //   current_user: 2\n  //   //light: typeof window === 'object',\n  //   //lastUpdate: Date.now(),\n  // })\n\n  return {}\n}\n\nexport default withRedux(Login)\n\n// export default Login\n\n\n\n// function ProfilePage({ profile }) {\n//   return (\n//     <>\n//       <div>\n//         <img src={profile.avatar} />\n//         <h1>{profile.name}</h1>\n//         <p>{profile.address}</p>\n//         <p>{profile.email}</p>\n//         <Link href=\"/\">\n//           <a>‚Üê Back to profiles</a>\n//         </Link>\n//       </div>\n//     </>\n//   )\n// }\n\n// export default ProfilePage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAJA;AAAA;AACA;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAPA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAMA;AAEA;AACA;AACA;AAvCA;AAYA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAyCA;AAKA;AACA;AAEA;AADA;AACA;AAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsgFA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}